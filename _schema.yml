processes: list(include('process'), min=1)

process:  # one of these is required, how to enforce?
# 'processes' enforces a minimum of 1
  custom: include('receiver', required=False)
  custom: include('sender', required=False)
  custom: include('getter', required=False)
  custom: include('pipeline', required=False)
  custom: include('filter', required=False)
  custom: include('admin', required=False)
  custom: include('auth', required=False)

receiver:
  custom: include('networkAgentCommon')
  # I'd rather do this, but it is messier than I thought
  # custom: include('protocol')
  protocol: enum('udp')
  custom: include('port')

sender:
  custom: include('networkAgentCommon')
  # I'd rather do this, but it is messier than I thought
  # custom: include('protocol')
  protocol: enum('udp','ssh')

getter:
  custom: include('networkAgentCommon')
  # I'd rather do this, but it is messier than I thought
  # custom: include('protocol')
  protocol: enum('ssh')

networkAgentCommon:
  custom: include('interfaceType')
  custom: include('processInfo')
  custom: include('folder')

# I'd rather do this, but it is messier than I thought
# protocol: enum('tcp', 'udp', 'ssh') # protocol varies by agent

# this is a list, but a list as a sequence
# is there always a filter? no, not necessarily
# entry and exit are always required, so create a subtype
# that forces them, while allowing filters to be optional
# This will at least get my schema validated, but will not enforce order
pipeline: list('pipeElement', min=2)

# This will at least get my schema validated, but will not enforce order
pipelineElement:
  custom: include('entry')
  custom: include('filters', required=False)
  custom: include('exit')
 
entry: # one of these is required, how to enforce?
  custom: include('receiver', required=False)
  custom: include('getter', required=False)

exit: # probably always a sender, but maybe a folder, maybe
  custom: include('sender') # required=False
  # custom: include('folder', required=False)

# hmm, if we use filters, there must be at least one,
# but filters are optional - cf pipelineElement above
filters: list(include('filter'), min=1)

folder:
    custom:    include('path')
    custom:    include('folderType')
    custom:    include('fileTransition', required=False)

filter:
  custom: include('processInfo')
  custom: include('in')
  custom: include('out')
  custom: include('err')
  custom: include('canExecs', required=False)

canExecs: list(include('canExec'))

canExec:
  custom: include('processInfo')

in:
  custom:       include('folder')

out:
  custom:       include('folder')

err:
  custom:       include('folder')

admin:
  custom:       include('processInfo')

auth:
  custom:       include('processInfo')

processInfo:
  custom:       include('processType')
  custom:       include('startedBy')

startedBy:  # one of these must be included - how to verify?
  custom:       include('user', required=False)
  custom:       include('system', required=False)
  custom:       include('process', required=False)

user:
  custom: include('role')
  custom: include('processTransition', required=False)

system:
  custom: include('initTtransition')

# primitives/terminals to be validated
fileTransition:    str() # for now
initTransition:    str() # for now
processTransition: str() # for now

# fairly well understood primitives/terminals
port:          int()
interfaceType: str()  # the SELinux type for the interface
path:          str()  # for now; likely
role:          str()  # an SELinux role
processType:   str()  # the actual SELinux type for the process
folderType:    str()  # the actual SELinux type for the folder
