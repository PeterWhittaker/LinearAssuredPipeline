#!/usr/bin/env bash

type -a yamale > /dev/null 2>&1 || { echo "Cannot proceed: No yamale. Exiting."; exit 1; }

# add new tests here
ALLTESTS="pipelineNoFilters pipelineSingleFilter pipelineTwoFilters pipelineThreeFilters"

target=${1:-all}
set -u

pipelineProcessor=processPipeline.py

finalRC=0 # assume all will be well
template=schemaTemplate.yaml

myDir=$(dirname $0)
cd $myDir || { echo "Cannot cd to '$myDir', exiting."; exit 1; }
myDir=$(pwd)
cd .. || { echo "Cannot cd to parent of '${myDir}', exiting."; exit 3; }
myParent=$(pwd)
cd $myDir || { echo "Cannot cd to '$myDir', exiting."; exit 5; }
templatePath="${myParent}/${template}"
[[ ! -r ${templatePath} ]] && { echo "Cannot find '${template}', exiting."; exit 7; }

pipelineProcessorPath=${myParent}/${pipelineProcessor}
[[ ! -x ${pipelineProcessorPath} ]] && { echo "Cannot fund '${pipelineProcessor}', exiting."; exit 91; }

schemaDir="__testFiles__"
schemaDirPath="${myDir}/${schemaDir}"
[[ ! -d "${schemaDirPath}" ]] && { echo "Cannot find '${schemaDir}', exiting."; exit 97; }

runTest () {
    set +u
    myTarget="${1}"
    [[ -z ${myTarget} ]] && { echo "No target specified."; finalRC=11; return; }
    set -u
    testFile="${myTarget}.yml"
    testSchema="${schemaDirPath}/${myTarget}_schema.yaml"
    [[ ! -r "${testFile}" ]] && { echo "Cannot find '${testFile}'."; finalRC=13; return; }

    cat << EOM > ${testSchema}
${myTarget}: include('pipeline')
---
EOM
    cat "${templatePath}" >> ${testSchema}
    yamale -p ruamel -s "${testSchema}" "${testFile}"
    case $? in
        0)
            echo "Schema validation of '${myTarget}' succeeded."
            ;;
        *)
            echo
            echo "Schema validation of '${myTarget}' failed. There should be many messages above."
            finalRC=17
            ;;
    esac

    ${pipelineProcessorPath} --filename "${testFile}" --pipelinename "${myTarget}"
    case $? in
        0)
            echo "Pipeline validation of '${myTarget}' succeeded."
            ;;
        *)
            echo
            echo "Pipeline validation of '${myTarget}' failed. There should be many messages above."
            finalRC=19
            ;;
    esac
}

case $target in
    all)
        for test in ${ALLTESTS}; do
            runTest $test
        done
        ;;
    pipelineTest)
        runTest $target
        ;;
    *)
        echo "Unrecognized target '${target}', exiting."
        exit 9
        ;;
esac

exit $finalRC
